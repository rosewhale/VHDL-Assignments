library ieee;
	  use ieee.std_logic_1164.all;
	  use ieee.std_logic_arith.all;
	  use ieee.std_logic_unsigned.all;

entity RAM is
generic (bits: INTEGER := 8;
         words: INTEGER := 16);
   port (wr_ena, clk: in std_logic;
         addr: in integer range 0 to words-1;
         data_in: in std_logic_vector (bits-1 downto 0);
         data_out: out std_logic_vector (bits-1 downto 0));
         
 end RAM;
 
 architecture RAM of RAM is
    type vector_arry is arry (0 to words-1) of
         std_logic_vetor (bits-1 downto 0);
    signal memory: vector_array;
 
 begin
    process (clk, wr_ena)
    begin
      if (wr_ena='1') then
        if (clk'event and clk='1') then
            memory(addr) <= data_in;
        end if;
      end if;
    end process;
    data_out <= memory(addr);
    
end RAM;
